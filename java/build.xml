<?xml version="1.0" encoding="utf-8"?>

<!--
    file:		build.xml
    description:	ant build file for zmundo-java
    author:		Felix Heinrichs <felix.heinrichs@cs.tu-darmstadt.de>
-->  
<project name="zmundo" default="build" basedir=".">

    <!--
      TODO: Note that this build file will currently work
      	    only on windows systems. In order to make it
            work on mac os and linux, make sure that the
            appropriate native library files are copied to
            the bin dir properly.
    -->

    <!-- PROPERTIES -->

    <property file="build.properties"/>
    <property name ="jar.name" value="${ant.project.name}.jar"/>
    <property environment="env"/>

    <condition property="protoc" value="${protoc.win}">
        <os family="windows" />
    </condition>
    <condition property="protoc" value="${protoc.mac}">
        <os family="mac" />
    </condition>
    <condition property="protoc" value="${protoc.unx}">
        <os family="unix" />
    </condition>


    <!-- PATHS -->

    <path id="compile.cp" >
        <pathelement location="${src.dir}"/>
        <pathelement location="${gen.dir}"/>
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="compile.tst.cp" >
	<pathelement path="${compile.cp}"/>
	<pathelement location="${junit.jar}"/>
    </path>

    <path id="tst.cp" >
        <pathelement location="${bin.dir}" />
        <pathelement location="${junit.jar}"/>
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>


    <!-- TESTCASES -->

    <property name ="tst.zm.core.unit" 
	      value="org.zmundo.ZMCoreUnitTest"/>
    <property name ="tst.zm.core.Integration" 
	      value="org.zmundo.ZMCoreIntegrationTest"/>


    <!-- TARGETS -->

    <target name="init" description="initialize directory structure">
        <echo>    [initializing]</echo>
        <mkdir dir="${src.dir}"/>
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${bin.dir}"/>
        <mkdir dir="${gen.dir}"/>
        <mkdir dir="${cnt.dir}"/>
        <mkdir dir="${doc.dir}"/>
        <mkdir dir="${tst.dir}"/>
        <mkdir dir="${bin.lib.dir}"/>
    </target>

    <target name="clean" description="cleans the project">
        <echo>    [cleaning project]</echo>
        <delete dir="${bin.dir}"/>
        <delete dir="${gen.dir}"/>
        <delete dir="${doc.dir}"/>
        <delete file="${jar.name}"/>
    </target>

    <target name="precompile" depends="init" 
	    description="precompiles the used interfaces">
		<echo>    [pre-compiling]</echo>
    	<property name="protoc.import.path" location="${ifc.dir}"/>
        <apply executable="${protoc}" parallel="true">
            <arg value="--proto_path=${protoc.import.path}"/>
            <arg value="--java_out=${gen.dir}"/>
            <fileset dir="${ifc.dir}">
                <include name="**/*.proto" />
            </fileset>
        </apply>
    </target>
	
    <target name="compile" depends="init,precompile" 
	    description="Compiles all java files">
        <echo>    [compiling]</echo>
        <javac srcdir="${src.dir}" 
               destdir="${bin.dir}" 
               source="1.6" 
               target="1.6"
               failonerror="true" 
               listfiles="false"
               debug="${zm.debug}"
               debuglevel="${zm.debuglevel}"
               includeantruntime="false" >
            <classpath refid="compile.cp"/>
            <compilerarg value="-Xlint:unchecked"/>
	    <src path="${src.dir}"/>
	    <src path="${gen.dir}"/>
        </javac>
    </target>

    <target name="createcnt"
	    description="creates needed content">
        <echo>    [copying library files]</echo>
        <copy todir="${bin.lib.dir}/">
	    <fileset dir="${lib.dir}/native/win32">
                <include name="**/*.dll"/>
	    </fileset>
	    <fileset dir="${etc.dir}/win32">
                <include name="**/*.dll"/>
	    </fileset>
        </copy>
        <echo>    [creating configuration files]</echo>
        <copy todir="${bin.dir}/">
            <fileset dir="${cnt.dir}">
                <include name="**/*.xml"/>
                <include name="**/*.properties"/>
            </fileset>
        </copy>
    </target>

    <target name="compiletst" depends="init,compile" 
	    description="Compiles the projects junit test sources">
        <echo>    [compiling tests]</echo>
        <javac srcdir="${tst.dir}" 
               destdir="${bin.dir}" 
               source="1.6" 
               target="1.6"
               failonerror="true" 
               listfiles="false"
               debug="${zm.debug}"
               debuglevel="${zm.debuglevel}"
               includeantruntime="false" >
            <classpath refid="compile.tst.cp"/>
            <compilerarg value="-Xlint:unchecked"/>
	    <src path="${src.dir}"/>
	    <src path="${gen.dir}"/>
        </javac>
    </target>

    <target name="test" depends="unittst,integrationtst"
	    description="runs unit and integration tests">
        <echo>    [testing]</echo>
    </target>

    <target name="unittst" depends="compiletst"
	    description="runs unit tests">
        <junit printsummary="yes" 
	       fork="yes" 
	       haltonfailure="yes" 
	       haltonerror="yes" 
	       dir="${bin.dir}">
            <env key="PATH" value="${env.PATH};${bin.lib.dir}"/>
            <classpath refid="tst.cp" />
	    <jvmarg value="-Djava.library.path=${bin.lib.dir}"/>
            <formatter type="plain" usefile="false" />
	    <test name="${tst.zm.core.Unit}"/>
        </junit>
    </target>

    <target name="integrationtst" depends="compiletst"
	    description="runs unit tests">
        <junit printsummary="yes" 
	       fork="yes" 
	       haltonfailure="yes" 
	       haltonerror="yes" 
	       dir="${bin.dir}">
            <env key="PATH" value="${env.PATH};${bin.lib.dir}"/>
            <classpath refid="tst.cp" />
	    <jvmarg value="-Djava.library.path=${bin.lib.dir}"/>
            <formatter type="plain" usefile="false" />
	    <test name="${tst.zm.core.Integration}"/>
        </junit>
    </target>

    <target name="jar" depends="compile" 
	    description="create the jar file">
        <echo>    [creating jar]</echo>
        <jar jarfile="${jarname}" compress="true">
            <fileset dir="${bin.dir}">
                <include name="**/*.class" />
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${project.lab}"/>
                <section name="common">
                    <attribute name="Implementation-Vendor" 
                               value="${project.vendor}"/>
                    <attribute name="Implementation-Title" 
                               value="${project.description}"/>
                    <attribute name="License" 
                               value="${project.license}"/>
                </section>
            </manifest>
        </jar>
    </target>

    <target name="doc" depends="init,precompile" 
	    description="generates project documentation">
        <taskdef name="doxygen" 
                 classname="org.doxygen.tools.DoxygenTask"
                 classpathref="compile.cp"/>
        <doxygen>
	    <property name="INPUT" value="${src.dir} ${ifc.dir}"/>
	    <property name="OUTPUT_DIRECTORY" value="${doc.dir}"/>
	    <property name="PROJECT_NAME" value="${project.name}"/>
	    <property name="PROJECT_LOGO" value="${project.logo}"/>
	    <property name="PROJECT_BRIEF" value="${project.description}"/>
        </doxygen>
    </target>


    <!-- DEFAULT TARGET -->

    <target name="build" depends="createcnt,jar"
        description="builds and deploys the project">
    <echo>Building zmundo project</echo>
    </target>

</project>
