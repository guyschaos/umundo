<project name="umundo" default="jar">

<!-- taskdef resource="net/sf/antcontrib/antcontrib.properties">
  <classpath>
    <pathelement location="lib/ant-contrib-1.0b3.jar"/>
  </classpath>
</taskdef -->

<target name="compile" description="Compile the java code generated by SWIG.">
  <mkdir dir="${build.dir}/core/bindings/swig/java-class/" />
	<javac destdir="${build.dir}/core/bindings/swig/java-class/" debug="true" includeantruntime="false">
      <src path="${build.dir}/protobuf/generated/" />
      <src path="${build.dir}/core/bindings/swig/java/" />
      <src path="${src.dir}/s11n/src/umundo-java/" />
      <src path="${src.dir}/rpc/src/umundo-java/" />
      <classpath>
          <pathelement location="${src.dir}/contrib/java/lib/protobuf-java-2.4.1.jar"/>
      </classpath>      
  </javac>
</target>

<target name="protoc" description="Run protoc for messages and services">
	<echo message="source dir:         ${src.dir}"/>
	<echo message="build dir:          ${build.dir}"/>
	<echo message="protoc source dir:  ${protoc.src.dir}"/>
	<echo message="protoc binary:      ${protoc.bin}"/>
	<echo message="protoc plugin:      ${protoc.plugin}"/>

	<mkdir dir="${build.dir}/protobuf/generated" />

	<apply executable="${protoc.bin}">
		<arg value="--java_out=${build.dir}/protobuf/generated" /> 
		<arg value="--java_rpc_out=${build.dir}/protobuf/generated" /> 
		<arg value="--proto_path=${protoc.src.dir}" /> 
		<arg value="--plugin=protoc-gen-java_rpc=${protoc.plugin}" /> 
		<!-- arg value="-descriptor_set_out=???" / --> 

		<fileset dir="${protoc.src.dir}" casesensitive="yes">
			<include name="*.proto"/>
		</fileset>
	</apply>
</target>

<target name="jar" depends="compile" description="Create a bundle of the source code">
	<echo message="library dir:        ${lib.dir}"/>
	<echo message="source dir:         ${src.dir}"/>
	<echo message="build dir:          ${build.dir}"/>
	<echo message="build type:         ${build.type}"/>
	<echo message="exclude debug:      ${exclude.debug}"/>
	<echo message="exclude jni:        ${exclude.jni}"/>

	<condition property="exclude.debug.jar">
		<equals arg1="${exclude.debug}" arg2="ON"/>
	</condition>

	<condition property="exclude.jni.jar">
		<equals arg1="${exclude.jni}" arg2="ON"/>
	</condition>

	<!-- flatten all JNI libraries for inclusion into the fat JAR -->
	<fileset id="all.jni" dir="${lib.dir}">
		<include name="**/*Swig*.jnilib"/>
		<include name="**/*Swig*.so"/>
		<include name="**/*Swig*.dll"/>
		<exclude name="cross-compiled/**"/>
		<!-- do not include debug builds in release -->
		<!--exclude name="**/*undocoreSwigSwig_d*" if="${exclude.debug.jar}"/ -->
		<!--exclude name="**/*undocoreSwig64_d*" if="${exclude.debug.jar}"/ -->
	</fileset>
	
	<mkdir dir="${lib.dir}/jni" />
	<copy todir="${lib.dir}/jni" flatten="true">
		<fileset refid="all.jni" />
	</copy>

	<!-- delete an eventual old jar -->
	<delete dir="${lib.dir}/umundocore.jar" />
	
	<!-- build new jar -->
	<jar destfile="${lib.dir}/umundocore.jar">
		<!-- All the class files we compiled -->
    <fileset dir="${build.dir}/core/bindings/swig/java-class/" >
      <include name="**/*.class" />
    </fileset>
		<!-- Include all source files -->
    <fileset dir="${build.dir}/core/bindings/swig/java/" >
      <include name="**/*.java" />
    </fileset>
    <fileset dir="${src.dir}/s11n/src/umundo-java/" >
      <include name="**/*.java" />
    </fileset>
    <fileset dir="${src.dir}/rpc/src/umundo-java/" >
      <include name="**/*.java" />
    </fileset>
    <fileset dir="${build.dir}/protobuf/generated/" >
      <include name="**/*.java" />
    </fileset>
		<!-- The JNI libraries -->
    <fileset dir="${lib.dir}/jni" >
      <include name="**/*" />
			<!-- exclude name="**/*" if="${exclude.jni.jar}" / -->
    </fileset>
	</jar>
	<!-- delete dir="${lib.dir}/jni" / -->
</target>

<target name="test" description="Test the uMundo Java wrappers">
	<echo message="library dir:        ${lib.dir}"/>
	<echo message="source dir:         ${src.dir}"/>
	<echo message="build dir:          ${build.dir}"/>
	<echo message="build type:         ${build.type}"/>

	<echo message="Test loading JAR and JNI library"/>
	<javac classpath="${lib.dir}/umundocore.jar" srcdir="test/" includeantruntime="false" />
	<java classpath="${lib.dir}/umundocore.jar:test" classname="TestJNILoad" />
	<delete file="test/TestJNILoad.class" />
</target>

</project>
