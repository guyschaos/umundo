#!/usr/bin/expect

set local_prompt {sradomski$ }
set remote_prompt {Administrator@epikur-win7 }
set cmd_prompt {Administrator.build>}

eval cd ~/Documents/TK/Code/

##############################
# prepare and deploy archive

# check age of archive against modification date
eval spawn find ./umundo -newer umundo-win.tgz
set redeploy 0;
expect {
	"find:*No such file"     { set redeploy 1; }
	-re ".cpp\r\n"           { set redeploy 1; }
	-re ".h\r\n"             { set redeploy 1; }
	-re "CMakeLists.txt\r\n" { set redeploy 1; }
	-re $local_prompt        { }
}

if {$redeploy} {
	eval spawn rm umundo-win.tgz
	eval spawn tar --exclude=umundo/contrib/prebuilt/darwin --exclude=umundo/docs --exclude=umundo/contrib/samples/ios --exclude=umundo/contrib/archives --exclude=umundo/.git --exclude=umundo/build* --exclude=umundo/lib/ios-5.0 --exclude=umundo/lib/linux* --exclude=umundo/lib/darwin* --exclude=umundo/installer/uMundo* --exclude=umundo/contrib/prebuilt/linux* --exclude=umundo/contrib/prebuilt/ios -czvf umundo-win.tgz umundo/
	expect {
		"a umundo/"        { exp_continue }
		timeout            { puts "Timeout when packaging source code"; exit; }
		-re $local_prompt  { }
	}

	eval spawn scp -4 umundo-win.tgz Administrator@epikur-win7:~/
	expect {
		"ETA"              { exp_continue }
		timeout            { puts "Timeout when uploading source code"; exit;  }
		-re $local_prompt  { }
	}
}

eval spawn ssh -4 Administrator@epikur-win7.local.
expect {
	timeout            { puts "Timeout when connecting to windows"; exit;  }
	-re $local_prompt  { puts "Could not connect to remote host"; exit; }
	-re $remote_prompt
}

if {$redeploy} {
	send "rm -rf umundo\n"
	expect -re $remote_prompt

	send "tar xvzf umundo-win.tgz\n"
	expect "umundo/"          { exp_continue } \
	       -re $remote_prompt { }

	send "find ./umundo -type f -name '.*' -exec rm {} \\;\n"
	expect -re $remote_prompt

}

send "mkdir build\n"
expect -re $remote_prompt

send "rm -rf build/*\n"
expect -re $remote_prompt

send "cd build\n"
expect -re $remote_prompt

##############################
# start cmd.exe and prepare for compiling
send "cmd\n"
expect -re $cmd_prompt

# "c:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\vcvars32.bat"
send "\"c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\vcvars32.bat\"\n"
expect -re $cmd_prompt

# "c:\Program Files (x86)\CMake 2.8\bin\cmake.exe" -G "NMake Makefiles" -DPROTOBUF_SRC_ROOT_FOLDER=C:/Users/radomski/Desktop/protobuf-2.4.1 -DSWIG_EXECUTABLE=C:/MinGW/msys/1.0/src/swig/swig-2.0.5.exe ..\umundo"
send "\"c:\\Program Files (x86)\\CMake 2.8\\bin\\cmake.exe\" -G \"NMake Makefiles\" -DPROTOBUF_SRC_ROOT_FOLDER=C:/Users/radomski/Desktop/protobuf-2.4.1 -DSWIG_EXECUTABLE=C:/MinGW/msys/1.0/src/swig/swig-2.0.5.exe ..\\umundo\n"

set prepared 0;
expect {
	-re "\n--"                         { exp_continue; }
	"Build files have been written to" { set prepared 1; exp_continue; }
    -re $cmd_prompt                    { }
    timeout                            { exit; }
}

if {!$prepared} {
	exit;
}


##############################
# compile, test and package

send "nmake\n"
expect {
	-re "Building CXX" { exp_continue; }
	"fatal error"      { exit }
    -re $cmd_prompt    { }
}

# send "ctest -D Experimental\n"
# expect -re $cmd_prompt

#set timeout 150

send "nmake package\n"
expect {
	-re $cmd_prompt {}
	"Built target"  { exp_continue; }
	"CPack"  { exp_continue; }
}

##############################
# logout and copy installer packages

send "exit\n"
expect -re $remote_prompt
send "logout\n"
expect -re $local_prompt

eval spawn scp -4 Administrator@epikur-win7:~/build/uMundo-*-win32* umundo/installer/
expect {
	"ETA"              { exp_continue }
	timeout            { puts "Timeout when uploading source code"; exit;  }
	-re $local_prompt  { }
}

