package zmundo;

option java_package = "org.zmundo.msg";
option java_outer_classname = "ZMMessageProtos";

/*! Defines the format of messages in zmundo. It contains standard messages
    for Strings, booleans, int (signed int32), longs, floats and doubles. You
    can think of these messages as arbitrarily sized arrays (or lists) of the
    specific type. Plus there is a special message {\p ZMCompositeMessage}, that
    consists of all of these messages as optional parts. So in order to send
    a single string around, you would use the {\p ZMStringMessage}, whereas to
    send a list of 5 strings, a boolean and an array of 2 integers you would use
    {\p ZMCompositeMessage}.
    
    In order to generate the sources to use this description, you hava to invoke
    {\p protoc} with appropriate parameters for the target source. See the 
    protobuf description for details: {\link http://code.google.com/p/protobuf/}.
*/

message ZMStringMessage {
    repeated string payload = 1;
}

message ZMIntMessage {
    repeated int32 payload = 1;
}

message ZMLongMessage {
    repeated int64 payload = 1;
}

message ZMBoolMessage {
    repeated bool payload = 1;
}

message ZMFloatMessage {
    repeated float payload = 1;
}

message ZMDoubleMessage {
    repeated double payload = 1;
}

message ZMCompositeMessage {
    optional ZMStringMessage string_payload = 1;
    optional ZMIntMessage int_payload = 2;
    optional ZMLongMessage long_payload = 3;
    optional ZMBoolMessage bool_payload = 4;
    optional ZMFloatMessage float_payload = 5;
    optional ZMDoubleMessage double_payload = 6;
}